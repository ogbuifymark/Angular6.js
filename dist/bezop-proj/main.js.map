{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_service/Authentication.Service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.scss","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/graph/graph.component.html","webpack:///./src/app/graph/graph.component.scss","webpack:///./src/app/graph/graph.component.ts","webpack:///./src/app/sidebar/sidebar.component.html","webpack:///./src/app/sidebar/sidebar.component.scss","webpack:///./src/app/sidebar/sidebar.component.ts","webpack:///./src/app/signin/signin.component.html","webpack:///./src/app/signin/signin.component.scss","webpack:///./src/app/signin/signin.component.ts","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.scss","webpack:///./src/app/users/users.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthenticationService {\n    constructor(private http: HttpClient) { }\n\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersComponent } from './users/users.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AuthGuard } from './auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '', component: DashboardComponent, pathMatch: 'full', canActivate: [AuthGuard]\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent, canActivate: [AuthGuard]\n  },\n  {\n    path: 'users',\n    component: UsersComponent, canActivate: [AuthGuard]\n  },\n  {\n    path: 'login', component: SigninComponent\n  },\n];\n\n@NgModule({\n  imports: [\n    BrowserModule, BrowserAnimationsModule,\n    // MatButtonModule, MatCardModule, MatInputModule, MatSnackBarModule, MatToolbarModule,\n    RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div id=\\\"container\\\">\\n  <app-sidebar></app-sidebar>\\n\\n  <div id=\\\"content\\\">\\n    <router-outlet>\\n      \\n    </router-outlet>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'bezop-proj';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { UsersComponent } from './users/users.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Http, HttpModule } from '@angular/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { jqxDropDownListComponent } from 'jqwidgets-scripts/jqwidgets-ts/angular_jqxdropdownlist';\nimport { jqxChartComponent } from 'jqwidgets-scripts/jqwidgets-ts/angular_jqxchart';\nimport { GraphComponent } from './graph/graph.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { SocialLoginModule,  AuthServiceConfig,  GoogleLoginProvider,  FacebookLoginProvider} from 'angular-6-social-login';\nimport { LinkedinLoginProvider } from 'angular-6-social-login';\nimport { AuthGuard } from './auth.guard';\nimport { FormsModule } from '@angular/forms';\nimport { AuthenticationService } from './_service/Authentication.Service';\n\n\n\nexport function getAuthServiceConfigs() {\n  const config = new AuthServiceConfig(\n      [\n        // {\n        //   id: FacebookLoginProvider.PROVIDER_ID,\n        //   provider: new FacebookLoginProvider('Your-Facebook-app-id')\n        // },\n        {\n          id: GoogleLoginProvider.PROVIDER_ID,\n          provider: new GoogleLoginProvider('657825322723-6tlfvpomg132hl43p08s5sidi129ufub.apps.googleusercontent.com')\n        },\n          // {\n          //   id: LinkedinLoginProvider.PROVIDER_ID,\n          //   provider: new LinkedinLoginProvider('1098828800522-m2ig6bieilc3tpqvmlcpdvrpvn86q4ks.apps.googleusercontent.com')\n          // },\n      ]\n  );\n  return config;\n}\n@NgModule({\n  declarations: [\n    AppComponent,\n    SidebarComponent,\n    UsersComponent,\n    DashboardComponent,\n    // jqxBarGaugeComponent,\n    jqxChartComponent,\n    jqxDropDownListComponent,\n    GraphComponent,\n    SigninComponent,\n  ],\n  imports: [\n    SocialLoginModule,\n    // FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    HttpModule,\n    BrowserAnimationsModule,\n    // GuardComponent,\n  ],\n  providers: [\n    AuthGuard,\n    AuthenticationService,\n    {\n      provide: AuthServiceConfig,\n      useFactory: getAuthServiceConfigs\n    }\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate  {\n\n  constructor(private router: Router) { }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n      return true;\n    // if (localStorage.getItem('currentUser')) {\n    //     // logged in so return true\n    //     return true;\n    // }\n\n    // // not logged in so redirect to login page with the return url\n    // this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n    // return false;\n  }\n}\n\n","module.exports = \"<!-- <h1>Symbols</h1> -->\\n<div class=\\\"row\\\"><div class=\\\"col-md-12\\\">\\n  <p>network indicator</p>\\n  <i class=\\\"material-icons md-32\\\" [style.color]=\\\"color\\\">fiber_manual_record</i> {{colour$}}\\n</div></div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div class=\\\"col-md-8\\\">\\n        <app-graph></app-graph>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n\\n    </div>\\n     \\n  </div>\\n  \\n</div>\\n\\n\\n\"","module.exports = \"\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { trigger, style, transition, animate, keyframes, query, stagger } from '@angular/animations';\n// import {GraphComponent} from '../graph/graph.component';\n\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  animations: [\n    trigger('listStagger', [\n      transition('* <=> *', [\n        query(\n          ':enter',\n          [\n            style({ opacity: 0, transform: 'translateY(-15px)' }),\n            stagger(\n              '50ms',\n              animate(\n                '550ms ease-out',\n                style({ opacity: 1, transform: 'translateY(0px)' })\n              )\n            )\n          ],\n          { optional: true }\n        ),\n        query(':leave', animate('50ms', style({ opacity: 0 })), {\n          optional: true\n        })\n      ])\n    ])\n  ]\n})\nexport class DashboardComponent implements OnInit {\n  color  = 'red';\n  values: number[] = [102, 115, 130, 137];\n  tickers$: Object;\n  colour$: Object;\n  constructor(private data: DataService) { }\n\n  ngOnInit() {\n    this.colour$ = 'off';\n    this.data.getTickers().subscribe(\n        data => this.tickers$ = data\n    );\n    console.log(this.data);\n  }\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewInit(): void {\n    const timer = setInterval(() => {\n      if (navigator.onLine) {\n        this.color = 'green';\n        this.colour$ = 'on';\n        // Has connection, go do something\n      } else {\n        this.color = 'red';\n        this.colour$ = 'off';\n      }\n\n\n      }, 1000);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {ws} from 'ws';\nimport { from } from 'rxjs/internal/observable/from';\n// import {BitfinexAPI} from '../../node_modules/bitfinex-api/dist/index.js';\nimport * as socketIo from 'socket.io-client';\nimport { Observable } from 'rxjs';\nimport { Socket } from './shared/interfaces';\nimport { Observer } from 'rxjs';\nimport { QueueingSubject } from 'queueing-subject';\nimport websocketConnect from 'rxjs-websockets';\nimport { map, take } from 'rxjs/operators';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class DataService {\nuri = 'http://localhost:4000/bitfinexRoutes';\n\n  socket: Socket;\n  observer: Observer<Object>;\n    constructor(private http: HttpClient) {}\n  getTickers() {\n    const check = this.http.get(this.uri);\n    return check;\n  }\n\n\n  postTickers(tickers) {\n    return this.http.post(this.uri + '/add', tickers)\n    .subscribe(res => console.log('Done'));\n  }\n\n  getPosts() {\n    return this.http.get('https://jsonplaceholder.typicode.com/posts');\n  }\n\n}\n","module.exports = \"<jqxChart #myChart\\n[width]=\\\"getWidth()\\\" [height]=\\\"600\\\"\\n[title]=\\\"'Bitfinex Live updates'\\\" [enableAxisTextAnimation]=\\\"true\\\"\\n[description]=\\\"''\\\" [animationDuration]=\\\"1000\\\"\\n[showLegend]=\\\"true\\\" [enableAnimations]=\\\"false\\\" [padding]=\\\"padding\\\"\\n[titlePadding]=\\\"titlePadding\\\" [source]=\\\"data\\\" [xAxis]=\\\"xAxis\\\"\\n[valueAxis]=\\\"valueAxis\\\" [seriesGroups]=\\\"seriesGroups\\\" [colorScheme]=\\\"'scheme03'\\\">\\n</jqxChart>\\n    <table style=\\\"width: 680px\\\">\\n    <tbody>\\n        <tr>\\n            <td style=\\\"padding-left: 50px\\\">\\n                <p>Select the series type:</p>\\n                <jqxDropDownList (onChange)=\\\"seriesOnChange($event)\\\"\\n                    [width]=\\\"200\\\" [height]=\\\"25\\\" [selectedIndex]=\\\"2\\\"\\n                    [dropDownHeight]=\\\"100\\\" [source]=\\\"seriesList\\\">\\n                </jqxDropDownList>\\n            </td>\\n            <td>\\n                <p>Select color scheme:</p>\\n                <jqxDropDownList (onChange)=\\\"colorsOnChange($event)\\\"\\n                    [width]=\\\"200\\\" [height]=\\\"25\\\" [selectedIndex]=\\\"2\\\"\\n                    [dropDownHeight]=\\\"100\\\" [source]=\\\"colorsSchemesList\\\">\\n                </jqxDropDownList>\\n            </td>\\n        </tr>\\n    </tbody>\\n    </table>\\n\"","module.exports = \"\"","import { Component, OnInit , AfterViewInit} from '@angular/core';\nimport { DataService } from '../data.service';\nimport { XhrFactory } from '@angular/common/http/src/xhr';\n// import { error } from '@angular/compiler/src/util';\nimport { jqxChartComponent } from 'jqwidgets-scripts/jqwidgets-ts/angular_jqxchart';\nimport { Console } from '@angular/core/src/console';\nimport { Subscription } from 'rxjs/';\nimport { QueueingSubject } from 'queueing-subject';\nimport websocketConnect from 'rxjs-websockets';\nimport { ViewChild } from '@angular/core';\nimport { BitfinexCandles } from '../shared/interfaces';\nimport { error } from 'selenium-webdriver';\n\n// import { Socket } from 'dgram';\n\n\nconst input = new QueueingSubject<string>();\nconst msg = JSON.stringify({\n  event: 'subscribe',\n  channel: 'candles',\n  key: 'trade:1m:tBTCUSD'\n});\n\n@Component({\n  selector: 'app-graph',\n  templateUrl: './graph.component.html',\n  styleUrls: ['./graph.component.scss']\n})\n\nexport class GraphComponent implements OnInit {\n    months: string[] = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    sub: Subscription;\n    tickers$: any[] = [];\n    sockets: any;\n    @ViewChild('myChart') myChart: jqxChartComponent;\n\n    constructor(private mysource: DataService) { }\n    ngOnInit(): void {\n        // let payload = msg;\n        console.log('hey');\n        this.generateChartData();\n    }\n\n    getWidth(): any {\n    if (document.body.offsetWidth < 1250) {\n        return '100%';\n    }\n    return 1000;\n    }\n\n    // tslint:disable-next-line:use-life-cycle-interface\n    ngAfterViewInit(): void {\n        const data = this.myChart.source();\n        // const timer = setInterval(() => {\n        //     const max = 800;\n        //     if (data.length >= 60) {\n        //         data.splice(0, 1);\n        //     }\n        //     const timestamp = new Date();\n        //     timestamp.setSeconds(timestamp.getSeconds());\n        //     timestamp.setMilliseconds(0);\n        //     data.push({ timestamp: timestamp, value: Math.max(100, (Math.random() * 1000) % max) });\n        //     alert(JSON.stringify({ timestamp: timestamp, value: Math.max(100, (Math.random() * 1000) % max) });\n        //     this.myChart.update();\n\n        // }, 1000);\n        const { messages, connectionStatus } = websocketConnect('wss://api.bitfinex.com/ws/2', input);\n        input.next(msg);\n\n        const connectionStatusSubscription = connectionStatus.subscribe(numberConnected => {\n          console.log('number of connected websockets:', numberConnected);\n        });\n\n        const messagesSubscription = messages.subscribe((message: string) => {\n            this.sockets = JSON.parse(message);\n            if (data.length >= 60) {\n                        data.splice(0, 1);\n                    }\n            if (this.sockets instanceof Array) {\n                if (data !== []) {\n                if (this.sockets[1].length > 6) {\n                    // tslint:disable-next-line:forin\n                    for (const socket in this.sockets[1]) {\n                        const jsondata = {\n                            timestamp: new Date(this.sockets[1][socket][0]),\n                            // open: this.sockets[1][socket][1],\n                            // high: this.sockets[1][socket][3],\n                            // low: this.sockets[1][socket][4],\n                            // value: this.sockets[1][socket][2],\n                            value: this.sockets[1][socket][5]\n                        };\n\n                            if (jsondata.timestamp !== null) {\n                                data.unshift(jsondata);\n                                this.myChart.update();\n                                this.mysource.postTickers(jsondata);\n                            }\n                        }\n                        // this.tickers$ = data;\n                        // localStorage.setItem('chartdata', JSON.stringify(data));\n                    }\n                  } else {\n                    const jsondata = {\n                        timestamp: new Date(this.sockets[1][0]),\n                        // open: this.sockets[1][1],\n                        // high: this.sockets[1][3],\n                        // low: this.sockets[1][4],\n                        // value: this.sockets[1][2],\n                        value: this.sockets[1][5]\n                    };\n                    if (jsondata.timestamp !== null) {\n                        data.push(jsondata);\n                        console.log(JSON.stringify(jsondata.timestamp));\n                        this.myChart.update();\n                        this.mysource.postTickers(jsondata);\n                        this.myChart.update();\n                    }\n                    // localStorage.setItem('chartdata', JSON.stringify(data));\n\n                  }\n            }\n        });\n    }\n\n    // toolTipCustomFormatFn = (value: any, itemIndex: any, serie: any, group: any, categoryValue: any, categoryAxis: any) => {\n    //     const dataItem = data.records[itemIndex];\n    //     const volume = dataItem.volume;\n    //     return '<DIV style=\"text-align:left\"><b>Date: ' +\n    //         categoryValue.getDate() + '-' + this.months[categoryValue.getMonth()] + '-' + categoryValue.getFullYear() +\n    //         '</b><br />Open price: $' + value.open +\n    //         '</b><br />Close price: $' + value.close +\n    //         '</b><br />Low price: $' + value.low +\n    //         '</b><br />High price: $' + value.high +\n    //         '</b><br />Daily volume: ' + volume +\n    //     '</DIV>';\n    // }\n    // tslint:disable-next-line:member-ordering\n    data: any[] = [];\n    // tslint:disable-next-line:member-ordering\n    padding: any = { left: 5, top: 5, right: 5, bottom: 5 };\n    // tslint:disable-next-line:member-ordering\n    titlePadding: any = { left: 0, top: 0, right: 0, bottom: 10 };\n    // tslint:disable-next-line:member-ordering\n    xAxis: any =\n    {\n        dataField: 'timestamp',\n        type: 'date',\n        baseUnit: 'second',\n            // unitInterval: 1,\n        formatFunction: (value: any) => {\n            return jqx.dataFormat.formatdate(value, 'hh:mm:ss', 'en-us');\n        },\n        gridLines: { interval: 10 },\n        valuesOnTicks: true,\n        labels: { offset: { x: -17, y: 0 } }\n    };\n    // tslint:disable-next-line:member-ordering\n    valueAxis: any =\n    {\n        minValue: 0,\n        maxValue: 100,\n        title: { text: 'Volume' },\n        labels: { horizontalAlignment: 'right' }\n    };\n    // tslint:disable-next-line:member-ordering\n    seriesGroups: any[] =\n    [\n        {\n            type: 'line',\n            columnsGapPercent: 50,\n            alignEndPointsWithIntervals: true,\n            valueAxis:\n            {\n                minValue: 0,\n                maxValue: 100,\n                title: { text: 'Index Value' }\n            },\n            series: [\n                // tslint:disable-next-line:max-line-length\n                { dataField: 'value', displayText: 'Time', opacity: 1, lineWidth: 2, symbolType: 'circle', fillColorSymbolSelected: 'white', symbolSize: 4 }\n            ]\n        }\n    ];\n\n    // tslint:disable-next-line:member-ordering\n    colorsSchemesList: string[] = ['scheme01', 'scheme02', 'scheme03', 'scheme04', 'scheme05', 'scheme06', 'scheme07', 'scheme08'];\n    // tslint:disable-next-line:member-ordering\n    seriesList: string[] = ['splinearea', 'spline', 'column', 'scatter', 'stackedcolumn', 'stackedsplinearea', 'stackedspline'];\n    colorsOnChange(event: any): void {\n        const value = event.args.item.value;\n        this.myChart.colorScheme(value);\n        this.myChart.update();\n    }\n    seriesOnChange(event: any): void {\n        const args = event.args;\n        if (args) {\n            const value = args.item.value;\n            this.myChart.seriesGroups()[0].type = value;\n            this.myChart.update();\n        }\n    }\n    sortByProperty(property: any) {\n            return function (x, y) {\n\n                return ((x[property] === y[property]) ? 0 : ((x[property] > y[property]) ? 1 : -1));\n\n            };\n        }\n    generateChartData = () => {\n        // const max = 800;\n        // const timestamp = new Date();\n        // for (let i = 0; i < 60; i++) {\n        //     timestamp.setMilliseconds(0);\n        //     timestamp.setSeconds(timestamp.getSeconds() - 1);\n        //     this.data.push({ timestamp: new Date(timestamp.valueOf()), value: Math.max(100, (Math.random() * 1000) % max) });\n        // }\n        // console.log(JSON.stringify({ timestamp: new Date(timestamp.valueOf()), value: Math.max(100, (Math.random() * 1000) % max) }));\n        // this.data = this.data.reverse();\n        // localStorage.setItem('chartdata', null);\n        this.mysource.getTickers().subscribe(\n            (savedDatas: BitfinexCandles) => {\n                let count = 0;\n                // tslint:disable-next-line:forin\n                for (const savedData in savedDatas) {\n                    if ( count > 240) {\n                        break;\n                    } else if (savedDatas[savedData].timestamp !== null && count < 240) {\n                        this.data.unshift(savedDatas[savedData]);\n                        count += 1;\n                    }\n                }\n                if (this.data.length >= 60) {\n                    this.data.splice(0, 1);\n                }\n                // alert('data' + this.data.length);\n                this.data = this.data.reverse();\n            });\n    }\n\n\n  // tslint:disable-next-line:member-ordering\n\n}\n\n\n\n","module.exports = \"<nav>\\n  <ul>\\n    <li>\\n      <a routerLink=\\\"\\\" [class.activated]=\\\"currentUrl == '/'\\\">\\n        <i class=\\\"material-icons\\\">supervised_user_circle</i>\\n      </a>\\n    </li>\\n    <li>\\n      <a routerLink=\\\"posts\\\" [class.activated]=\\\"currentUrl == '/posts'\\\">\\n        <i class=\\\"material-icons\\\">message</i>\\n      </a>\\n    </li>\\n  </ul>\\n</nav>  \"","module.exports = \"nav {\\n  background: #2D2E2E;\\n  height: 100%; }\\n  nav ul {\\n    list-style-type: none;\\n    padding: 0;\\n    margin: 0; }\\n  nav ul li a {\\n      color: #fff;\\n      padding: 20px;\\n      display: block; }\\n  nav ul li .activated {\\n      background-color: #00a8ff; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { AuthGuard } from '../auth.guard';\n\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n    currentUrl: string;\n  constructor(private router: Router) {\n    router.events.subscribe((_: NavigationEnd) => this.currentUrl = _.url);\n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<h1>\\n  Sign in\\n</h1>\\n\\n<button (click)=\\\"socialSignIn('facebook')\\\">Sign in with Facebook</button>\\n<button (click)=\\\"socialSignIn('google')\\\">Signin in with Google</button>     \\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {\n  AuthService,\n  FacebookLoginProvider,\n  GoogleLoginProvider,\n  LinkedinLoginProvider\n} from 'angular-6-social-login';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n  returnUrl: string;\n\n  constructor( private socialAuthService: AuthService, private route: ActivatedRoute,\n    private router: Router ) {}\n\n  public socialSignIn(socialPlatform: string) {\n    let socialPlatformProvider;\n    if (socialPlatform === 'facebook') {\n      socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\n    } else if (socialPlatform === 'google') {\n      socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\n    } else if (socialPlatform === 'linkedin') {\n      socialPlatformProvider = LinkedinLoginProvider.PROVIDER_ID;\n    }\n\n    this.socialAuthService.signIn(socialPlatformProvider).then(\n      (userData) => {\n        console.log(socialPlatform + ' sign in data : ' , userData);\n        localStorage.setItem('currentUser', JSON.stringify(userData));\n        this.router.navigate(['dashboard']);\n\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n}\n","module.exports = \"<p>\\n  users works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  'secret': '2_dPXXvF3Zxae2obkY9mo7Gv'\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}